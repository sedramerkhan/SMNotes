# Workflow name (shown in GitHub Actions tab)
name: Build and Deploy to Telegram

# When to run this workflow
on:
  push:
    # Uncomment the line below to build on every commit to main branch
    # branches: [ main ]
    # Build only when a version tag is pushed (e.g., v1.0, v1.1, v2.0)
    # Prevents building on every commit, only builds releases
    tags:
      - 'v*'
  # Allow manual trigger from Actions tab
  workflow_dispatch:

jobs:
  build:
    # Run on latest Ubuntu (free GitHub Actions runners)
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Download the code from GitHub repository
    - name: Checkout repository
      uses: actions/checkout@v4
      
    # Step 2: Install Java 17 (required for Android builds)
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    # Step 3: Install Android SDK and build tools
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    # Step 4: Make gradlew executable (GitHub Actions doesn't preserve file permissions)
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ${{ github.workspace }}
      
    # Step 5: Build the release APK using Gradle
    - name: Build APK
      run: ./gradlew assembleRelease
      working-directory: ${{ github.workspace }}
      
    # Step 6: Debug - find and list all APK files (for troubleshooting)
    - name: Find APK
      run: find . -name "*.apk" -type f
      
    # Step 7: Extract version information from build.gradle
    # Example: versionName "1.0" and versionCode 1 becomes "SMNotes-V1.0(1).apk"
    - name: Get version info
      id: version_info
      run: |
        VERSION_NAME=$(grep "versionName" app/build.gradle | sed -n 's/.*versionName "\(.*\)".*/\1/p')
        VERSION_CODE=$(grep "versionCode" app/build.gradle | sed -n 's/.*versionCode \([0-9]*\).*/\1/p')
        echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT
        echo "version_code=$VERSION_CODE" >> $GITHUB_OUTPUT
        echo "build_name=SMNotes V$VERSION_NAME($VERSION_CODE)" >> $GITHUB_OUTPUT
        echo "apk_filename=SMNotes-V$VERSION_NAME($VERSION_CODE).apk" >> $GITHUB_OUTPUT
        
    # Step 8: Rename APK from "app-release.apk" to "SMNotes-V1.0(1).apk"
    - name: Rename APK
      id: rename_apk
      run: |
        ORIGINAL_APK=$(find app/build/outputs/apk/release -name "*.apk" | head -1)
        NEW_APK_NAME="${{ steps.version_info.outputs.apk_filename }}"
        NEW_APK_PATH="app/build/outputs/apk/release/$NEW_APK_NAME"
        cp "$ORIGINAL_APK" "$NEW_APK_PATH"
        echo "apk_path=$NEW_APK_PATH" >> $GITHUB_OUTPUT
        echo "apk_size=$(du -h "$NEW_APK_PATH" | cut -f1)" >> $GITHUB_OUTPUT
        echo "apk_name=$NEW_APK_NAME" >> $GITHUB_OUTPUT
        
    # Step 9: Upload APK to GitHub as downloadable artifact (kept for 30 days)
    # You can download it from Actions â†’ workflow run â†’ Artifacts
    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.version_info.outputs.apk_filename }}
        path: ${{ steps.rename_apk.outputs.apk_path }}
        retention-days: 30
        
    # Step 10: Send APK to your Telegram channel
    # Requires secrets: TELEGRAM_BOT_TOKEN and TELEGRAM_CHAT_ID
    - name: Send APK to Telegram
      uses: appleboy/telegram-action@master
      with:
        # Your Telegram channel ID (e.g., -1001234567890 or @yourchannel)
        to: ${{ secrets.TELEGRAM_CHAT_ID }}
        # Your Telegram bot token from @BotFather
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        # The renamed APK file to send
        document: ${{ steps.rename_apk.outputs.apk_path }}
        # Message shown with the file
        caption: |
          ðŸš€ *${{ steps.version_info.outputs.build_name }}*
          
          ðŸ“¦ Size: ${{ steps.rename_apk.outputs.apk_size }}
          
          ðŸ”— [View on GitHub](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
        format: markdown
        parse_mode: Markdown

